(function(m) {
    "function" == typeof define && define.amd ? define(["jquery", "datatables.net-bs", "datatables.net-editor"], function(n) {
        return m(n, window, document)
    }) : "object" == typeof exports ? module.exports = function(n, o) {
        return n || (n = window), o && o.fn.dataTable || (o = require("datatables.net-bs")(n, o).$), o.fn.dataTable.Editor || require("datatables.net-editor")(n, o), m(o, n, n.document)
    } : m(jQuery, window, document)
})(function(m, n, o) {
    var q = m.fn.dataTable;
    q.Editor.defaults.display = "bootstrap";
    var r = q.Editor.defaults.i18n;
    r.create.title = "<h3>" + r.create.title + "</h3>", r.edit.title = "<h3>" + r.edit.title + "</h3>", r.remove.title = "<h3>" + r.remove.title + "</h3>";
    var s = q.TableTools;
    s && (s.BUTTONS.editor_create.formButtons[0].className = "btn btn-primary", s.BUTTONS.editor_edit.formButtons[0].className = "btn btn-primary", s.BUTTONS.editor_remove.formButtons[0].className = "btn btn-danger"), m.extend(!0, m.fn.dataTable.Editor.classes, {
        header: {
            wrapper: "DTE_Header modal-header"
        },
        body: {
            wrapper: "DTE_Body modal-body"
        },
        footer: {
            wrapper: "DTE_Footer modal-footer"
        },
        form: {
            tag: "form-horizontal",
            button: "btn btn-default"
        },
        field: {
            wrapper: "DTE_Field row",
            label: "col-sm-6",
            input: "col-sm-6",
            error: "error has-error",
            "msg-labelInfo": "help-block",
            "msg-info": "help-block",
            "msg-message": "help-block",
            "msg-error": "help-block",
            multiValue: "well well-sm multi-value",
            multiInfo: "small",
            multiRestore: "well well-sm multi-restore"
        }
    });
    var t;
    return q.Editor.display.bootstrap = m.extend(!0, {}, q.Editor.models.displayController, {
        init: function(u) {
            return t._dom.content = m("<div class=\"modal fade\"><div class=\"modal-dialog\"><div class=\"modal-content\"/></div></div>"), t._dom.close = m("<button class=\"close\">&times;</div>"), t._dom.close.click(function() {
                t._dte.close("icon")
            }), m(o).on("click", "div.modal", function(v) {
                m(v.target).hasClass("modal") && t._shown && t._dte.background()
            }), u.on("open.dtebs", function(v, w) {
                ("inline" === w || "bubble" === w) && m("div.DTE input[type=text], div.DTE select, div.DTE textarea").addClass("form-control")
            }), t
        },
        open: function(u, v, w) {
            if (t._shown) return void(w && w());
            t._dte = u, t._shown = !0;
            var x = t._dom.content.find("div.modal-content");
            x.children().detach(), x.append(v), m("div.modal-header", v).prepend(t._dom.close), m(t._dom.content).one("shown.bs.modal", function() {
                t._dte.s.setFocus && t._dte.s.setFocus.focus(), w && w()
            }).one("hidden", function() {
                t._shown = !1
            }).appendTo("body").modal({
                backdrop: "static",
                keyboard: !1
            }), m("input:not([type=checkbox]):not([type=radio]), select, textarea", t._dom.content).addClass("form-control")
        },
        close: function(u, v) {
            return t._shown ? void(m(t._dom.content).one("hidden.bs.modal", function() {
                m(this).detach()
            }).modal("hide"), t._dte = u, t._shown = !1, v && v()) : void(v && v())
        },
        node: function() {
            return t._dom.content[0]
        },
        _shown: !1,
        _dte: null,
        _dom: {}
    }), t = q.Editor.display.bootstrap, q.Editor
});
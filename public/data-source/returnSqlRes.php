<?php/** * Export data to csv file. */# cabeçaho do controladorrequire_once 'quad_head_controller.php';# ajustar a exportação de números ao formato português (virgula como separador decimal)if (@$_SESSION['database'] === 'MYSQL') {    } elseif (@$_SESSION['database'] === 'ORACLE') {    if (@$_SESSION['lang'] == 'pt') {        $stid = oci_parse(            $db,            "ALTER SESSION SET NLS_NUMERIC_CHARACTERS = ',.'"        );        oci_execute($stid);    }}//deal with request to delete fileif (    isset($_GET['action']) &&    $_GET['action'] === 'delete' &&    isset($_GET['file']) &&    file_exists($_GET['file'])) {    unlink($_GET['file']);    die();}//Server temporary directory to write file$targetPath = APP_TMP_PATH;$filename = time() . ".csv";$tmpFile = $targetPath . $filename;$fp = fopen($tmpFile, 'w');//add BOM to fix UTF-8 in Excelfputs($fp, $bom = chr(0xef) . chr(0xbb) . chr(0xbf));//request from web-worker$sql_from_worker = json_decode(file_get_contents('php://input'));//request from main thread$dt = $sql_from_worker ? $sql_from_worker : @$_POST['sql'];$data = array();$results = array();$txt = '';if (isset($dt->decodeExport) && $dt->decodeExport === false) {    foreach ($dt->sql as $key => $val) {        // -----        try {            $stmt = $db->prepare($val);            $stmt->execute();            $cnt = 0;            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {                ## adiciona cabeçalho                if ($cnt == 0) {                    $header = array();                    foreach ($row as $key => $val) {                        $header[] = $key;                    }                    fputcsv($fp, $header, chr(59));                    $cnt = 1;                }                fputcsv($fp, $row, chr(59));                $txt .= " / " . $row;            }        } catch (PDOException $e) {            $msg = 'S.1 [' . $sql_count . '] :' . $e->getMessage();            break;        }        // -----        /* OLD Version        $stmt = oci_parse($db, $val);        $isQueryOk = oci_execute($stmt);        if ($isQueryOk) {            $cnt = 0;            while (($row = oci_fetch_assoc($stmt)) !== false) {                ## adiciona cabeçalho                if ($cnt == 0) {                    $header = array();                    foreach ($row as $key => $val)                        $header[] = $key;                    fputcsv($fp, $header, chr(59));                    $cnt = 1;                }                fputcsv($fp, $row, chr(59));            }        }        */    }    fclose($fp);    //oci_free_statement($stmt);    if ($msg == '') {        $data['download'] = $folder . $filename;        $data['file'] = $tmpFile;        echo json_encode($data);    } else {        echo $msg;    }} else {    $res = '';    foreach (isset($dt->sql) ? $dt->sql : $dt as $key => $val) {        try {            $stmt = $db->prepare($val);            $stmt->execute();            $res = $stmt->fetchAll(PDO::FETCH_ASSOC);            $results[$key] = $res;        } catch (Exception $ex) {        }        /* OLD        $stmt = oci_parse($db, $val);        $isQueryOk = oci_execute($stmt);        if ($isQueryOk) {            oci_fetch_all($stmt, $res, 0, -1, OCI_FETCHSTATEMENT_BY_ROW);            $results[$key] = $res;        }        */    }    echo json_encode($results);}?>